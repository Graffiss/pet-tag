// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MISSING_STATUS {
  MISSING
  NOT_MISSING
  FOUND
}

enum PET_TYPE {
  DOG
  CAT
  OTHER
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  username  String    @unique
  password  String
  pets      Pet[]
}

model Address {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  street    String   @db.VarChar(255)
  city      String   @db.VarChar(255)
  state     String   @db.VarChar(255)
  zip       String   @db.VarChar(255)
  pets      Pet[]
}

model Pet {
  id          String   @id @default(uuid())
  belongsToId String   
  belongsTo   User     @relation(fields: [belongsToId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(255)
  type        PET_TYPE
  primaryPhone String?   @db.VarChar(255)
  secondaryPhone String? @db.VarChar(255)
  breed       String?   @db.VarChar(255)
  color       String?   @db.VarChar(255)
  birthdate   DateTime?
  vetName     String?   @db.VarChar(255)
  addressId   String?   @unique
  address     Address?  @relation(fields: [addressId], references: [id])
  missing     MISSING_STATUS  @default(NOT_MISSING)
  @@unique([id, belongsToId])
}
